Para poder eniviar un parametro hacia el archivo 

public/js/dt-init.js

Que es el que se encarga de inicializar DataTables

Tenemos la seccion deonde se carga la url para el boton agregar:

initComplete: function () {
          // Agrega botón "Agregar" a la derecha
          let $botonAgregar = $(
            <div class="ms-auto">
              <a href="/catalogos/test/create" class="btn btn-success">
                <i class="fa fa-plus"></i> Agregar
              </a>
            </div>
          );


Lo que necesitamos es una forma de parametrizar la URL del botón "Agregar" en dt-init.js para que cada vista (como home.index, categories.index, etc.) podems pasar su propia URL hacia ese archivo JS.


Propuesta:

Pasa la URL del botón como data attribute en el HTML desde la vista index.blade.php, y en el archivo dt-init.js leer dinámicamente ese atributo.

Entonces

1. En nuestra vista (resources/views/home/index.blade.php), agregar un atributo data-create-url al contenedor donde se inicializa el DataTable. Por ejemplo:

    <div id="tabla-posts" data-create-url="{{ route('home.create') }}">
        <!-- Aquí va tu tabla -->
    </div>

    Para la vista de categorías sería u otra vista:

<div id="tabla-categorias" data-create-url="{{ route('categories.create') }}">

Pero coo en nuestra vistautilizamos componentes de blade 

Entonces necesitamos pasar la URL al componente <x-tabla-indice> como un atributo, para que este lo pueda imprimir en el HTML como data-create-url.


Paso 1: Modifica la llamada al componente en tu vista home/index.blade.php

Agregamos el atributo :create-url="route('home.create')" o simplemente create-url="{{ route('home.create') }}" :

<x-tabla-indice id="tabla-posts" create-url="{{ route('home.create') }}">

Paso 2: Modifica el componente Blade <x-tabla-indice> para aceptar el atributo

En el archivo del componente (resources/views/components/tabla-indice.blade.php) debemos asegurarnoe de aceptar el atributo create-url y colocarlo como un data- en el HTML principal del contenedor.

@props(['id', 'createUrl' => null])

<div id="{{ $id }}" class="tabla-con-agregar" @if($createUrl) data-create-url="{{ $createUrl }}" @endif>
    <table class="table table-bordered">
        <thead>
            {{ $thead }}
        </thead>
        <tbody>
            {{ $slot }}
        </tbody>
    </table>
</div>


Paso 3: En el archivo dt-init.js, usamos ese data-create-url


tenoamos inicialmente
initComplete: function () {
  // Agrega botón "Agregar" a la derecha
          let $botonAgregar = $(`
            <div class="ms-auto">
              <a href="/catalogos/test/create" class="btn btn-success">
                <i class="fa fa-plus"></i> Agregar
              </a>
            </div>
          `);

          let $wrapper = $table.closest('.dataTables_wrapper');
          let $btns = $wrapper.find('.dt-buttons');

          // Envolver los botones y el agregar en un contenedor flex
          $btns.wrap(`<div class="d-flex justify-content-between flex-wrap w-100 align-items-center mb-3"></div>`);
          $btns.parent().append($botonAgregar);
        }

Lo vamos a sustituir poir:


        
initComplete: function () {
    // Agrega botón "Agregar" a la derecha
    let createUrl = $('.tabla-con-agregar').data('create-url');

    if (!createUrl) return;

    let $botonAgregar = $(`
        <div class="ms-auto">
            <a href="${createUrl}" class="btn btn-success">
                <i class="fa fa-plus"></i> Agregar
            </a>
        </div>
    `);

    $('.dataTables_filter').append($botonAgregar);
}

Pero nuestroestamoss envolviendo los controles del DataTable (como el filtro de búsqueda) en un contenedor flex para dar formato con Bootstrap, entonces lo ideal es seguir usando ese contenedor personalizado para colocar el botón "Agregar", y no simplemente hacer append() a .dataTables_filter como en el ejemplo anterior.


 Ajuste sugerido para el paso 3 (JS dt-init.js)

Reemplaza tu código del paso anterior por algo como esto:


initComplete: function () {
    let $tabla = $('.tabla-con-agregar');
    let createUrl = $tabla.data('create-url');

    if (!createUrl) return;

    // Botón personalizado
    let $botonAgregar = $(`
        <div class="ms-auto">
            <a href="${createUrl}" class="btn btn-success">
                <i class="fa fa-plus"></i> Agregar
            </a>
        </div>
    `);

    // Obtenemos los botones generados por DataTable (como el filtro)
    let $btns = $('.dataTables_filter');

    // Creamos el contenedor flex solo si aún no se ha creado
    if (!$btns.parent().hasClass('d-flex')) {
        $btns.wrap(`
            <div class="d-flex justify-content-between flex-wrap w-100 align-items-center mb-3"></div>
        `);
    }

    // Agregamos el botón al contenedor flex
    $btns.parent().append($botonAgregar);
}

¿Qué asegura este código?
    Usa data-create-url de la tabla (dinámico por vista).
    Evita duplicar contenedores flex, solo los crea si no existen.
    Integra el botón "Agregar" dentro del mismo div.d-flex donde está el filtro de búsqueda (.dataTables_filter), conservando tu diseño original con justify-content-between.


